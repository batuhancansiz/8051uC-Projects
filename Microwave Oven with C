/*
A program will be written in C language for a microwave oven. The desired features of the microwave oven are 
as follows:
- 2 buttons will be used to adjust how many seconds the microwave oven will work. One button is for
increasing and the other for decreasing. Each time the button is pressed, the working time will be determined 
in 5 second intervals.
-1 button will be used to determine the operating power (watts) of the microwave oven. The power ratings 
are: 200, 300, 450, 600, 750, 800. 
(You can think of them as operating modes, not numerical values. Such as mod1=200, mod2=300 etc. 
According to the selected mode number, the leds arranged side by side will be turned on. For example; If 
mod3 is selected, 3 leds will be on, if mod4 is selected, the 4th led will also be on.)
- After the operating time and operating mode are set, the start button will be pressed and the microwave oven 
will be started. When the oven starts to work, the timer will count down and the motor that rotates the table 
inside will rotate at a constant speed.
-When the operation of the microwave oven is completed, a message should be sent from the serial port as 
"operation complete" and the buzzer connected to P1.0 should operate at 1 second intervals for 20 seconds. 
(You can use the attached proteus file for buzzer.)
*/

#include <89c51rd2.h>	
#include <stdio.h>

#define LED1 P0_0
#define LED2 P0_1
#define LED3 P0_2
#define LED4 P0_3
#define LED5 P0_4
#define LED6 P0_5

#define BUZZER  P0_6
#define START  P0_7


#define PLUSFIVE P1_0
#define MINUSFIVE P1_1
#define MODE2 P1_2
#define MODE3 P1_3
#define MODE4 P1_4
#define MODE5 P1_5
#define MODE6 P1_6



void delay(int);
void yazdir(unsigned char x);

unsigned char sure=0;
unsigned char saydir;  // saydir will be executed when interrupt 1 comes.
		
void delay(int k)
{
  int i,j;
  for(i=0;i<k;i++)
  {
    for(j=0;j<100;j++)
    {}
  }
}

void modsecim()
{
		if(MODE6==0)    				//Choosing mode6
			{
			LED1=1;
			LED2=1;
			LED3=1;
			LED4=1;
			LED5=1;
			LED6=1;
			}
			
		if(MODE5==0)   	//Choosing mode5
			{
			LED1=1;
			LED2=1;
			LED3=1;
			LED4=1;
			LED5=1;
			}
		
		if(MODE4==0)    //Choosing mode4
			{
			LED1=1;
			LED2=1;
			LED3=1;
			LED4=1;
			}
			
		if(MODE3==0)    //Choosing mode3
			{
			LED1=1;
			LED2=1;
			LED3=1;
			}
			
		if(MODE2==0)		//Choosing mode2
			{
			LED1=1;
			LED2=1;
			}
			
			else
				LED1=1;					//If no mode is selected, the microwave is set to the lowest power by default.
			
			return;		
}
		
void yazdir(unsigned char x)
{
	SBUF=x;
	while(TI==0);
	TI=0;
}

void surebitti() interrupt 1      
{
	TR0=0; 			
	saydir++;
	TH0=0xC3;			//50ms value 
	TL0=0x50;			//

	if(saydir==sure*20)     // Sure kadar zaman gecmisse
	{
			yazdir('I');
			P1_7=1;
			P1_7=0;
			yazdir('S');
			P1_7=1;
			P1_7=0;
			yazdir('L');
			P1_7=1;
			P1_7=0;
			yazdir('E');
			P1_7=1;
			P1_7=0;
			yazdir('M');
			P1_7=1;
			P1_7=0;
			yazdir(' ');
			P1_7=1;
			P1_7=0;
			yazdir('T');
			P1_7=1;
			P1_7=0;
			yazdir('A');
			P1_7=1;
			P1_7=0;
			yazdir('M');
			P1_7=1;
			P1_7=0;
			yazdir('A');
			P1_7=1;
			P1_7=0;
			yazdir('M');
			
	}
	else									//wait for 50ms interrupt again if time has not counted
	{
		goto cik;
	}
		
		cik: 
			yazdir('I');
			yazdir('S');
			yazdir('L');
			yazdir('E');
			yazdir('M');
			yazdir(' ');
			yazdir('D');
			yazdir('E');
			yazdir('V');
			yazdir('A');
			yazdir('M');
			yazdir(' ');
			yazdir('E');
			yazdir('D');
			yazdir('I');
			yazdir('Y');
			yazdir('O');
			yazdir('R');
}

void main()
{
	TMOD=0x90;   // Timer-1 Mod2 for baud rate ------  Timer-0, Mod-1 16bit for timer
	
	SCON=0x40;		// ; MOD-1 8bit UART controllable baud rate.
	TH1=0xFF;			// 9600 baud rate for 11.0592MHz
	TL1=0xFD;			// 9600 baud rate for 11.0592MHz
	TR1=1;
	
	TH0=0xC3;			//
	TL0=0x50;			//
	TR0=1;				//Let timer-0 start.
	
	ET0=1;      // Timer-0 intterrupt permission
	EA=1;				//Interrupt permission for all intterrupts.

	BUZZER=0;   //Set buzzer logic 0 initially
	
	suresecme:					//Check the start button push.
	
		if(START==1)			 // 	
		{
				if(PLUSFIVE==0)    //increase the duration by 5 seconds
						sure=sure+5;

				else if(MINUSFIVE==0)    //decrease the duration by 5 seconds
						{
									if (sure==0)      //If the time is desired to be reduced at 0, it will be set to 0 again.
											sure=0;
									else
											sure=sure-5;
						}
				else 
					goto suresecme;        // Do it again
					 
		}
		
		else if(START==1)  //Starting
		{
			goto suresectinmodsec;
		}
	
		suresectinmodsec:		
		modsecim();   		//Sent to mode choosing.
		
		P2=0x01; //0001
    delay(1000);
    P2=0x04; //0100
    delay(1000);
    P2=0x02; //0010
    delay(1000);
    P2=0x08; //1000
    delay(1000);
		
		saydir=0;
		
		while(1){}
		
	}	
